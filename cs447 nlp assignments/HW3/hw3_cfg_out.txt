########################################
### Sentence 1: 33 parses
### <There is no asbestos in our products now .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])]), Tree('RB', ['now'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])])])]), Tree('RB', ['now'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])])])]), Tree('RB', ['now'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])]), Tree('RB', ['now'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])]), Tree('NP', [Tree('N', [Tree('DT', ['no'])])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NNS', ['products'])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NNS', ['products'])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['asbestos'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NNS', ['products'])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBZ', ['is'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['asbestos'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NNS', ['products'])])])])])]), Tree('RB', ['now'])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 2: 96 parses
### <It has no bearing on our work force today .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 69
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 70
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 71
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 72
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 73
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 74
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 75
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 76
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 77
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 78
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 79
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 80
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 81
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 82
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 83
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 84
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 85
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 86
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 87
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 88
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 89
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 90
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 91
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 92
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['no'])])]), Tree('N', [Tree('NN', ['bearing'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 93
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 94
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])])]), Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 95
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('N', [Tree('NN', ['work'])])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 96
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('DT', ['no']), Tree('NP', [Tree('N', [Tree('NN', ['bearing'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['our'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['work'])])]), Tree('N', [Tree('NN', ['force'])])]), Tree('N', [Tree('NN', ['today'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 3: 1 parses
### <Champagne and dessert followed .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['Champagne'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NN', ['dessert'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['followed'])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 4: 8 parses
### <But Mr. Barnum called that a worst-case scenario .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Barnum'])])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Barnum'])])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Barnum'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['called'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['that'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['worst-case'])]), Tree('N', [Tree('NN', ['scenario'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 5: 4 parses
### <All came from Cray Research .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('DT', ['All'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['came'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Cray']), Tree('NNP_', [Tree('NNP', ['Research'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('DT', ['All'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['came'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Cray']), Tree('NNP_', [Tree('NNP', ['Research'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('DT', ['All'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['came'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Cray'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Research'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('DT', ['All'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['came'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Cray'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Research'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 6: 80 parses
### <No price for the new shares has been set .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 69
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 70
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 71
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 72
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 73
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 74
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 75
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 76
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['No'])])]), Tree('N', [Tree('NN', ['price'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 77
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 78
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 79
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 80
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['No']), Tree('NP', [Tree('N', [Tree('NN', ['price'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['for'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['new'])]), Tree('N', [Tree('NNS', ['shares'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['set'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 7: 6 parses
### <The computers were crude by today 's standards .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NNS', ['computers'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NNS', ['standards'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NNS', ['computers'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NNS', ['standards'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NNS', ['computers'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NNS', ['standards'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NNS', ['computers'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NNS', ['standards'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NNS', ['computers'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NNS', ['standards'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NNS', ['computers'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['crude'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['today'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NNS', ['standards'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 8: 4 parses
### <There were many pioneer PC contributors .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['many'])]), Tree('N', [Tree('NN', ['pioneer'])])])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['PC'])])]), Tree('N', [Tree('NNS', ['contributors'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBD', ['were'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['many'])]), Tree('N', [Tree('NN', ['pioneer'])])])]), Tree('N', [Tree('NN', ['PC'])])]), Tree('N', [Tree('NNS', ['contributors'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('JJ_', [Tree('JJ', ['many'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pioneer'])])]), Tree('N', [Tree('NN', ['PC'])])]), Tree('N', [Tree('NNS', ['contributors'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('EX', ['There']), Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['many'])]), Tree('N', [Tree('NN', ['pioneer'])])])]), Tree('N', [Tree('NN', ['PC'])])])]), Tree('NP', [Tree('N', [Tree('NNS', ['contributors'])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 9: 20 parses
### <Esso said the Whiting field started production Tuesday .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Esso'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])]), Tree('N', [Tree('NN', ['field'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Esso'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['said'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Whiting'])])])]), Tree('N', [Tree('NN', ['field'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['started'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['production'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Tuesday'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
########################################
### Sentence 10: 104 parses
### <The rest went to investors from France and Hong Kong .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['rest'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 69
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 70
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 71
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 72
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 73
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 74
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 75
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 76
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 77
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 78
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 79
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 80
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 81
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 82
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 83
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 84
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 85
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 86
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 87
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 88
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 89
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 90
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 91
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 92
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 93
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 94
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 95
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 96
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong']), Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 97
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 98
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 99
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 100
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 101
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 102
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Hong'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 103
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 104
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['rest'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['went'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('NP', [Tree('N', [Tree('NNS', ['investors'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['from'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('CC', ['and']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Hong'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Kong'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 11: 24 parses
### <They fell into oblivion after the 1929 crash .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])]), Tree('N', [Tree('NN', ['crash'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('N', [Tree('DT', ['the'])])])])]), Tree('N', [Tree('CD', ['1929'])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('CD', ['1929'])])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['into'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['oblivion'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['after'])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('CD', ['1929'])])])])])]), Tree('N', [Tree('NN', ['crash'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 12: 2 parses
### <Factory payrolls fell in September .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['Factory'])])]), Tree('N', [Tree('NNS', ['payrolls'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['September'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['Factory'])])]), Tree('N', [Tree('NNS', ['payrolls'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['fell'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['September'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 13: 4 parses
### <It 's imaginative and often funny .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('JJ_', [Tree('JJ_', [Tree('JJ', ['imaginative'])]), Tree('CC', ['and']), Tree('JJ_', [Tree('RB', ['often']), Tree('JJ_', [Tree('JJ', ['funny'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('JJ_', [Tree('JJ_', [Tree('JJ', ['imaginative'])]), Tree('CC', ['and']), Tree('JJ_', [Tree('RB', ['often']), Tree('JJ_', [Tree('JJ', ['funny'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('JJ_', [Tree('JJ_', [Tree('JJ', ['imaginative'])]), Tree('CC', ['and']), Tree('JJ_', [Tree('RB', ['often']), Tree('JJ_', [Tree('JJ', ['funny'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['It'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('JJ_', [Tree('JJ_', [Tree('JJ', ['imaginative'])]), Tree('CC', ['and']), Tree('JJ_', [Tree('RB', ['often']), Tree('JJ_', [Tree('JJ', ['funny'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 14: 4 parses
### <South Korea has different concerns .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['South']), Tree('NNP_', [Tree('NNP', ['Korea'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['different'])]), Tree('N', [Tree('NNS', ['concerns'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['South']), Tree('NNP_', [Tree('NNP', ['Korea'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['different'])]), Tree('N', [Tree('NNS', ['concerns'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['South'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Korea'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['different'])]), Tree('N', [Tree('NNS', ['concerns'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['South'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Korea'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['has'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['different'])]), Tree('N', [Tree('NNS', ['concerns'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 15: 107 parses
### <And the nose on Mr. Courter 's face grows .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])])])])]), Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])])])]), Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])])])]), Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])])])]), Tree('N', [Tree('NN', ['face'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['face'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['face'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['face'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['face'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 69
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 70
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 71
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 72
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 73
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 74
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 75
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 76
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 77
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 78
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 79
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 80
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 81
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 82
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 83
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 84
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 85
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 86
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 87
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 88
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 89
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 90
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 91
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.']), Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 92
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 93
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 94
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 95
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 96
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 97
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 98
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 99
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 100
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 101
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 102
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 103
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['nose'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 104
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 105
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 106
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 107
Tree('TOP', [Tree('S', [Tree('CC', ['And']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['nose'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Mr.'])])])])]), Tree('N', [Tree('NNP_', [Tree('NNP', ['Courter'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NN', ['face'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['grows'])])])]), Tree('FS', ['.'])])])])])
-------------------------
########################################
### Sentence 16: 4 parses
### <Her immediate predecessor suffered a nervous breakdown .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['Her'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['immediate'])]), Tree('N', [Tree('NN', ['predecessor'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['suffered'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['nervous'])]), Tree('N', [Tree('NN', ['breakdown'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['Her'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['immediate'])]), Tree('N', [Tree('NN', ['predecessor'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['suffered'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['nervous'])]), Tree('N', [Tree('NN', ['breakdown'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['Her'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['immediate'])]), Tree('N', [Tree('NN', ['predecessor'])])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['suffered'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['a'])])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['nervous'])]), Tree('N', [Tree('NN', ['breakdown'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRPX', ['Her'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['immediate'])]), Tree('N', [Tree('NN', ['predecessor'])])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['suffered'])]), Tree('NP', [Tree('DT', ['a']), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['nervous'])]), Tree('N', [Tree('NN', ['breakdown'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 17: 1 parses
### <Pressures began to build .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNS', ['Pressures'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['began'])])]), Tree('PP', [Tree('IN_', [Tree('TO', ['to'])]), Tree('VP', [Tree('V', [Tree('VB', ['build'])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 18: 16 parses
### <But Learning Materials matched on 66.5 of 69 subskills .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('CD', ['69'])])])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('CD', ['69'])])])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning']), Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning'])])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('CD', ['69'])])])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning'])])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning'])])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Learning'])])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning'])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('CD', ['69'])])])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning'])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning'])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('CC', ['But']), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Learning'])])]), Tree('N', [Tree('NNP_', [Tree('NNPS', ['Materials'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['matched'])])]), Tree('PP', [Tree('PP', [Tree('IN_', [Tree('IN', ['on'])]), Tree('NP', [Tree('N', [Tree('CD', ['66.5'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('CD', ['69'])])]), Tree('N', [Tree('NNS', ['subskills'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 19: 44 parses
### <Viacom denies it 's using pressure tactics .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('PRP', ['it'])]), Tree('POS', ["'s"])])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('PRP', ['it'])]), Tree('POS', ["'s"])])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('PRP', ['it'])]), Tree('POS', ["'s"])])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['Viacom'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('PRP', ['it'])]), Tree('POS', ["'s"])])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['Viacom'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ['denies'])]), Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['it'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBG', ['using'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['pressure'])])]), Tree('N', [Tree('NNS', ['tactics'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 20: 216 parses
### <The business had been handled by VanSant Dugdale , Baltimore .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 69
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 70
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 71
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 72
Tree('TOP', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 73
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 74
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 75
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 76
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 77
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 78
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 79
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 80
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 81
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 82
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 83
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 84
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 85
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 86
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 87
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 88
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 89
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 90
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 91
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 92
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 93
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 94
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 95
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 96
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 97
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 98
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 99
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 100
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 101
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 102
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 103
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 104
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 105
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 106
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 107
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 108
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 109
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 110
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 111
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 112
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 113
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 114
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 115
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 116
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 117
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 118
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 119
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 120
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 121
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 122
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 123
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 124
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 125
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 126
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 127
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 128
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 129
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 130
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 131
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 132
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 133
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 134
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 135
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 136
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 137
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 138
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 139
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 140
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 141
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 142
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 143
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 144
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 145
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 146
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 147
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 148
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 149
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 150
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 151
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 152
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 153
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 154
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 155
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 156
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 157
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 158
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 159
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 160
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 161
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 162
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 163
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 164
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 165
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 166
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 167
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 168
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 169
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 170
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 171
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 172
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 173
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 174
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 175
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 176
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 177
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 178
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 179
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 180
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 181
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 182
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 183
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 184
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 185
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 186
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 187
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 188
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 189
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 190
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 191
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 192
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['business'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 193
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 194
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 195
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 196
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 197
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 198
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 199
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 200
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 201
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 202
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 203
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 204
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 205
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 206
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 207
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 208
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 209
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 210
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 211
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 212
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 213
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP', ['Dugdale'])])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 214
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant']), Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 215
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['VanSant'])])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 216
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['business'])])])]), Tree('VP', [Tree('V', [Tree('VBD', ['had'])]), Tree('S', [Tree('VP', [Tree('V', [Tree('VBN', ['been'])]), Tree('S', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBN', ['handled'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['by'])]), Tree('NP', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['VanSant'])])]), Tree('N', [Tree('NNP_', [Tree('NNP_', [Tree('NNP', ['Dugdale'])]), Tree('COMMA', [',']), Tree('NNP_', [Tree('NNP', ['Baltimore'])])])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 21: 1 parses
### <Terms were n't disclosed .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNS', ['Terms'])])]), Tree('VP', [Tree('V', [Tree('VBD', ['were'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VBN', ['disclosed'])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 22: 68 parses
### <France can boast the lion 's share of high-priced bottles .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 13
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 14
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 15
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 16
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 17
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 18
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 19
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 20
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 21
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])])]), Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 22
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 23
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 24
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 25
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 26
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 27
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 28
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 29
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 30
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])])]), Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 31
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 32
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 33
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 34
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 35
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])])]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 36
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 37
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 38
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 39
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 40
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 41
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 42
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 43
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 44
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])])]), Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 45
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 46
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])])]), Tree('N', [Tree('NN', ['share'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 47
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"]), Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 48
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('PRPX_', [Tree('N', [Tree('NN', ['lion'])]), Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 49
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 50
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 51
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 52
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 53
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 54
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 55
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 56
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 57
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 58
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 59
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 60
Tree('TOP', [Tree('S', [Tree('NP', [Tree('N', [Tree('NNP_', [Tree('NNP', ['France'])])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 61
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 62
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 63
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 64
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('N', [Tree('NN', ['share'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 65
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 66
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['the'])])]), Tree('N', [Tree('NN', ['lion'])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 67
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('VBZ', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
Parse 68
Tree('TOP', [Tree('S', [Tree('NP', [Tree('NNP_', [Tree('NNP', ['France'])])]), Tree('VP', [Tree('V', [Tree('MD', ['can']), Tree('V', [Tree('VB', ['boast'])])]), Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['the']), Tree('NP', [Tree('N', [Tree('NN', ['lion'])])])]), Tree('VP', [Tree('V', [Tree('POS', ["'s"])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['share'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['of'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['high-priced'])]), Tree('N', [Tree('NNS', ['bottles'])])])])])])])]), Tree('FS', ['.'])])])])])
-------------------------
########################################
### Sentence 23: 12 parses
### <The president understood but did n't agree despite overwhelming political pressure .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 3
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 4
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 5
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 6
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 7
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VB', ['agree'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 8
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('DT', ['The'])])]), Tree('N', [Tree('NN', ['president'])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VB', ['agree'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 9
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 10
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('V', [Tree('VB', ['agree'])])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 11
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VB', ['agree'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming']), Tree('JJ_', [Tree('JJ', ['political'])])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 12
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('DT', ['The']), Tree('NP', [Tree('N', [Tree('NN', ['president'])])])]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['understood'])])]), Tree('CC', ['but']), Tree('VP', [Tree('V', [Tree('VBD', ['did'])]), Tree('RB', ["n't"]), Tree('VP', [Tree('VP', [Tree('V', [Tree('VB', ['agree'])])]), Tree('PP', [Tree('IN_', [Tree('IN', ['despite'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['overwhelming'])]), Tree('N', [Tree('JJ_', [Tree('JJ', ['political'])]), Tree('N', [Tree('NN', ['pressure'])])])])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 24: 1 parses
### <Stock prices rose fractionally in moderate trading .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('NP', [Tree('N', [Tree('NN', ['Stock'])])]), Tree('N', [Tree('NNS', ['prices'])])]), Tree('VP', [Tree('VP', [Tree('VP', [Tree('V', [Tree('VBD', ['rose'])])]), Tree('RB', ['fractionally'])]), Tree('PP', [Tree('IN_', [Tree('IN', ['in'])]), Tree('NP', [Tree('N', [Tree('JJ_', [Tree('JJ', ['moderate'])]), Tree('N', [Tree('NN', ['trading'])])])])])])]), Tree('FS', ['.'])])])
-------------------------
########################################
### Sentence 25: 2 parses
### <They operate ships and banks .>
########################################
Parse 1
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('N', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('V', [Tree('VBP', ['operate'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['ships'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNS', ['banks'])])])])])]), Tree('FS', ['.'])])])
-------------------------
Parse 2
Tree('TOP', [Tree('S', [Tree('S', [Tree('NP', [Tree('PRPX_', [Tree('PRP', ['They'])])]), Tree('VP', [Tree('V', [Tree('VBP', ['operate'])]), Tree('NP', [Tree('NP', [Tree('N', [Tree('NNS', ['ships'])])]), Tree('CC', ['and']), Tree('NP', [Tree('N', [Tree('NNS', ['banks'])])])])])]), Tree('FS', ['.'])])])
-------------------------
